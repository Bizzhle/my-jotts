version: "3.9"

services:
  nginx:
    restart: always
    build:
      context: ./nginx
      dockerfile: Dockerfile.dev
    container_name: nginx
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    volumes:
      - ./nginx/dev.conf:/etc/nginx/conf.d/default.conf

  frontend:
    restart: always
    build:
      context: ./frontend
    container_name: frontend
    env_file:
      - .env
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - /app/node_modules
    ports:
      - "5173:5173"
    depends_on:
      - backend

  backend:
    restart: always
    build:
      context: ./portal-backend
    container_name: backend
    env_file:
      - .env
    volumes:
      - ./portal-backend:/usr/src/app # Mount code directory
      - /usr/src/app/node_modules
    environment:
      DATABASE_URL: ${DATABASE_URL}
      NODE_ENV: development
    ports:
      - "4000:4000"
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:4000/api"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  database:
    image: postgres:15-alpine
    restart: always
    container_name: database
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 5s
      retries: 5

volumes:
  db_data: {}
